# ============================
# Step 1 - Build Stage
# ============================
FROM node:22-alpine AS builder

# Set the working directory
WORKDIR /app

# Copy environment variables for production
COPY .env.prod.frontend .env.production.local

# Copy package files and install dependencies
COPY package.json package-lock.json ./
RUN npm install

# Copy application code and build
COPY . /app
RUN npm run build

# ============================
# Step 2 - Production Stage
# ============================
FROM node:22-alpine

# Set the working directory
WORKDIR /app

# Install only production dependencies (optional but recommended)
COPY package.json package-lock.json ./
RUN npm install --omit=dev --frozen-lockfile

# Install curl for healthcheck
RUN apk update && apk add --no-cache curl

# Copy compiled app from builder
COPY --from=builder /app/.next ./.next
COPY --from=builder /app/public ./public
COPY --from=builder /app/package.json ./package.json
COPY --from=builder /app/node_modules ./node_modules
COPY --from=builder /app/next.config.mjs ./next.config.mjs
COPY --from=builder /app/.env.local .env.local

# Expose the application port
EXPOSE 3000

# Start the app in production mode
CMD ["npm", "run", "start"]