# """
# Django settings for the SurfQuest project.

# Generated by 'django-admin startproject' using Django 5.1.4.

# This file contains the settings and configurations for the Django project, 
# including database, installed apps, middleware, static files, and security options.

# For more information, see:
# - Django settings documentation: https://docs.djangoproject.com/en/5.1/topics/settings/
# - Full list of settings and their values: https://docs.djangoproject.com/en/5.1/ref/settings/
# - Deployment checklist: https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/
# """

# # ============================
# # Imports
# # ============================

# import os
# from pathlib import Path
# from datetime import timedelta
# from dotenv import load_dotenv

# # ============================
# # Environment Variables
# # ============================

# # Load environment variables from the .env file
# load_dotenv()

# # Print key environment variables for debugging (remove in production)
# print(f"SECRET_KEY: {os.getenv('SECRET_KEY')}")
# print(f"DATABASE_NAME: {os.getenv('DATABASE_NAME')}")
# print(f"DEBUG: {os.getenv('DEBUG')}")

# # ============================
# # Paths Configuration
# # ============================

# # Define the base directory of the project
# BASE_DIR = Path(__file__).resolve().parent.parent.parent

# # ============================
# # Security Settings
# # ============================

# # Security key for cryptographic signing
# SECRET_KEY = os.getenv("SECRET_KEY", "default-secret-key")

# # Enable debugging only if explicitly set in the environment
# DEBUG = os.getenv("DEBUG", "False") == "True"

# # List of allowed hosts (domains) that can access the application
# ALLOWED_HOSTS = ['localhost', '127.0.0.1', 'backend', "nginx"]

# # Trust the X-Forwarded-Proto header from Nginx to detect HTTPS requests properly
# SECURE_PROXY_SSL_HEADER = ("HTTP_X_FORWARDED_PROTO", "https")

# # ============================
# # Application Definition
# # ============================

# INSTALLED_APPS = [
#     # Default Django applications
#     'django.contrib.admin',
#     'django.contrib.auth',
#     'django.contrib.contenttypes',
#     'django.contrib.sessions',
#     'django.contrib.messages',
#     'django.contrib.staticfiles',

#     # Third-party applications
#     'rest_framework',
#     'rest_framework_simplejwt',
#     'corsheaders',

#     # Custom applications
#     'users',
#     'surfzones',
#     'conditions',
# ]

# # ============================
# # Django REST Framework Settings
# # ============================

# REST_FRAMEWORK = {
#     'DEFAULT_AUTHENTICATION_CLASSES': (
#         'rest_framework_simplejwt.authentication.JWTAuthentication',
#     ),
# }

# # ============================
# # JWT Authentication Settings
# # ============================

# SIMPLE_JWT = {
#     'ACCESS_TOKEN_LIFETIME': timedelta(days=1),
#     'REFRESH_TOKEN_LIFETIME': timedelta(days=1),
#     'ROTATE_REFRESH_TOKENS': False,
#     'BLACKLIST_AFTER_ROTATION': True,
#     'ALGORITHM': 'HS256',
#     'SIGNING_KEY': SECRET_KEY,
#     'VERIFYING_KEY': None,
#     'AUTH_HEADER_TYPES': ('Bearer',),
#     'USER_ID_FIELD': 'id',
#     'USER_ID_CLAIM': 'user_id',
#     'AUTH_TOKEN_CLASSES': ('rest_framework_simplejwt.tokens.AccessToken',),
#     'TOKEN_TYPE_CLAIM': 'token_type',
# }

# # ============================
# # Middleware Configuration
# # ============================

# MIDDLEWARE = [
#     'corsheaders.middleware.CorsMiddleware',
#     'django.middleware.common.CommonMiddleware',  # Optional but recommended
#     'django.middleware.security.SecurityMiddleware',
#     'django.contrib.sessions.middleware.SessionMiddleware',
#     'django.middleware.common.CommonMiddleware',
#     'django.middleware.csrf.CsrfViewMiddleware',
#     'django.contrib.auth.middleware.AuthenticationMiddleware',
#     'django.contrib.messages.middleware.MessageMiddleware',
#     'django.middleware.clickjacking.XFrameOptionsMiddleware',
# ]

# # ============================
# # CORS Configuration
# # ============================

# CORS_ALLOW_ALL_ORIGINS = False

# # List of allowed origins for cross-origin requests
# CORS_ALLOWED_ORIGINS = [
#     "http://localhost:3000",
#     "http://127.0.0.1:3000",
#     "http://backend:8000",  
#     "http://frontend:3000"
# ]

# # Enable credentials for cross-origin requests
# CORS_ALLOW_CREDENTIALS = True

# # Trusted origins for CSRF protection
# CSRF_TRUSTED_ORIGINS = [
#     "http://localhost:3000",
#     "http://127.0.0.1:3000",
#     "http://frontend:3000",
#     "http://backend:8000",
# ]

# # Allowed HTTP methods for CORS
# CORS_ALLOW_METHODS = [
#     "GET",
#     "POST",
#     "PUT",
#     "PATCH",
#     "DELETE",
#     "OPTIONS",
# ]

# # Allowed headers for CORS
# CORS_ALLOW_HEADERS = [
#     "content-type",
#     "authorization",
#     "Content-Type",
#     'Authorization',
#     "x-csrf-token",
#     "x-requested-with",
# ]

# # ============================
# # Cookie Security Settings
# # ============================

# SESSION_COOKIE_HTTPONLY = True
# CSRF_COOKIE_HTTPONLY = True
# SESSION_COOKIE_SECURE = True
# CSRF_COOKIE_SECURE = True

# # ============================
# # URL Configuration
# # ============================

# ROOT_URLCONF = 'surfquest.urls'

# # ============================
# # Media Configuration
# # ============================

# MEDIA_URL = "http://localhost:8080/media/"
# MEDIA_ROOT = '/app/media/'

# # ============================
# # Template Configuration
# # ============================

# TEMPLATES = [
#     {
#         'BACKEND': 'django.template.backends.django.DjangoTemplates',
#         'DIRS': [],
#         'APP_DIRS': True,
#         'OPTIONS': {
#             'context_processors': [
#                 'django.template.context_processors.debug',
#                 'django.template.context_processors.request',
#                 'django.contrib.auth.context_processors.auth',
#                 'django.contrib.messages.context_processors.messages',
#             ],
#         },
#     },
# ]

# # ============================
# # WSGI Configuration
# # ============================

# WSGI_APPLICATION = 'surfquest.wsgi.application'

# # ============================
# # Database Configuration
# # ============================

# if os.getenv('ENVIRONMENT') == 'docker':
#     DATABASES = {
#         'default': {
#             'ENGINE': 'django.db.backends.postgresql',
#             'NAME': os.getenv('DATABASE_NAME', 'default_db'),
#             'USER': os.getenv('DATABASE_USER', 'default_user'),
#             'PASSWORD': os.getenv('DATABASE_PASSWORD', 'default_password'),
#             'HOST': os.getenv('DATABASE_HOST', 'db'),
#             'PORT': os.getenv('DATABASE_PORT', '5432'),
#         }
#     }
# else:
#     DATABASES = {
#         'default': {
#             'ENGINE': 'django.db.backends.postgresql',
#             'NAME': os.getenv('LOCAL_DATABASE_NAME', 'surfquest_psql_db'),
#             'USER': os.getenv('LOCAL_DATABASE_USER', 'Admin44'),
#             'PASSWORD': os.getenv('LOCAL_DATABASE_PASSWORD', 'Admin44'),
#             'HOST': os.getenv('LOCAL_DATABASE_HOST', 'localhost'),
#             'PORT': os.getenv('LOCAL_DATABASE_PORT', '5432'),
#         }
#     }

# # ============================
# # Custom User Model
# # ============================

# AUTH_USER_MODEL = 'users.User'

# # ============================
# # Password Validation
# # ============================

# AUTH_PASSWORD_VALIDATORS = [
#     {'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator'},
#     {'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator'},
#     {'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator'},
#     {'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator'},
# ]

# # ============================
# # Internationalization Settings
# # ============================

# LANGUAGE_CODE = 'en-us'
# TIME_ZONE = 'UTC'
# USE_I18N = True
# USE_TZ = True

# # ============================
# # Static Files Configuration
# # ============================

# STATIC_URL = '/static/'
# STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')

# # ============================
# # Default Primary Key Field
# # ============================

# DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# # ============================
# # Upload Field Limit
# # ============================

# DATA_UPLOAD_MAX_NUMBER_FIELDS = 5000