# Generated by Django 5.1.4 on 2025-01-09 15:55

import django.core.validators
import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('surfzones', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Condition',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('month', models.CharField(choices=[('Jan', 'January'), ('Feb', 'February'), ('Mar', 'March'), ('Apr', 'April'), ('May', 'May'), ('Jun', 'June'), ('Jul', 'July'), ('Aug', 'August'), ('Sep', 'September'), ('Oct', 'October'), ('Nov', 'November'), ('Dec', 'December')], max_length=3)),
                ('water_temp', models.IntegerField(blank=True, null=True)),
                ('swell_size_ft', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(100.0)])),
                ('swell_size_meter', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(30.0)])),
                ('swell_consistency', models.IntegerField(blank=True, null=True)),
                ('swell_direction', models.CharField(blank=True, choices=[('N', 'North'), ('NE', 'Northeast'), ('E', 'East'), ('SE', 'Southeast'), ('S', 'South'), ('SW', 'Southwest'), ('W', 'West'), ('NW', 'Northwest')], max_length=10)),
                ('beginner', models.BooleanField(default=False)),
                ('intermediate', models.BooleanField(default=False)),
                ('advanced', models.BooleanField(default=False)),
                ('pro', models.BooleanField(default=False)),
                ('crowd', models.CharField(blank=True, choices=[('Low', 'Low'), ('Medium', 'Medium'), ('High', 'High'), ('Very High', 'Very High')], max_length=10)),
                ('local_surf_rating', models.PositiveSmallIntegerField(blank=True, choices=[(1, 'Mediocre'), (2, 'Fair'), (3, 'Good'), (4, 'Very good'), (5, 'Excellent')], default=3, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('world_surf_rating', models.PositiveSmallIntegerField(blank=True, choices=[(1, 'Mediocre'), (2, 'Fair'), (3, 'Good'), (4, 'Very good'), (5, 'Excellent')], default=3, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('min_air_temp', models.IntegerField(blank=True, null=True)),
                ('max_air_temp', models.IntegerField(blank=True, null=True)),
                ('rain_quantity', models.IntegerField(blank=True, null=True)),
                ('rain_days', models.IntegerField(blank=True, null=True)),
                ('sunny_days', models.IntegerField(blank=True, null=True)),
                ('wind_force', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('wind_direction', models.CharField(blank=True, choices=[('N', 'North'), ('NE', 'Northeast'), ('E', 'East'), ('SE', 'Southeast'), ('S', 'South'), ('SW', 'Southwest'), ('W', 'West'), ('NW', 'Northwest')], max_length=10)),
                ('wind_consistency', models.IntegerField(blank=True, null=True)),
                ('slug', models.SlugField(blank=True, max_length=150, unique=True)),
                ('surfzone', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='conditions', to='surfzones.surfzone')),
            ],
            options={
                'constraints': [models.UniqueConstraint(fields=('surfzone', 'month'), name='unique_conditions_surfzone_month')],
            },
        ),
    ]
