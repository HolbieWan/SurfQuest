# Generated by Django 5.1.4 on 2025-01-09 15:55

import django.contrib.postgres.fields
import django.core.validators
import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='SurfSpot',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('latitude', models.FloatField(blank=True, null=True)),
                ('longitude', models.FloatField(blank=True, null=True)),
                ('break_type', models.CharField(blank=True, max_length=20)),
                ('left', models.BooleanField(default=False)),
                ('right', models.BooleanField(default=False)),
                ('left_and_right', models.BooleanField(default=False)),
                ('best_wind_direction', models.CharField(blank=True, choices=[('N', 'North'), ('N-NE', 'North-northeast'), ('NE', 'Northeast'), ('E-NE', 'East-northeast'), ('E', 'East'), ('E-SE', 'East-southeast'), ('SE', 'Southeast'), ('S-SE', 'South-southeast'), ('S', 'South'), ('S-SW', 'South-southwest'), ('SW', 'Southwest'), ('W-SW', 'West-southwest'), ('W', 'West'), ('W-NW', 'West-northwest'), ('NW', 'Northwest'), ('N-NW', 'North-northwest')], max_length=5)),
                ('best_swell_direction', models.CharField(blank=True, choices=[('N', 'North'), ('N-NE', 'North-northeast'), ('NE', 'Northeast'), ('E-NE', 'East-northeast'), ('E', 'East'), ('E-SE', 'East-southeast'), ('SE', 'Southeast'), ('S-SE', 'South-southeast'), ('S', 'South'), ('S-SW', 'South-southwest'), ('SW', 'Southwest'), ('W-SW', 'West-southwest'), ('W', 'West'), ('W-NW', 'West-northwest'), ('NW', 'Northwest'), ('N-NW', 'North-northwest')], max_length=5)),
                ('best_swell_size', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(100.0)])),
                ('best_tide', models.CharField(blank=True, choices=[('low', 'Low'), ('mid', 'Mid'), ('high', 'High')], max_length=10)),
                ('surf_level', models.CharField(blank=True, choices=[('beginner', 'Beginner'), ('intermediate', 'Intermediate'), ('advanced', 'Advanced'), ('pro', 'Pro')], max_length=12)),
                ('surf_hazards', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=100), blank=True, size=None)),
                ('best_months', models.CharField(blank=True, help_text='Comma-separated month abbreviations', max_length=100)),
                ('description', models.TextField(blank=True)),
                ('slug', models.SlugField(blank=True, max_length=150, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Continent',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('code', models.CharField(max_length=2, unique=True)),
                ('slug', models.SlugField(blank=True, max_length=150, unique=True)),
            ],
            options={
                'constraints': [models.UniqueConstraint(fields=('name', 'code'), name='unique_continent_name_per_code')],
            },
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('code', models.CharField(max_length=3, unique=True)),
                ('slug', models.SlugField(blank=True, max_length=150, unique=True)),
                ('continent', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='surfzones.continent')),
            ],
        ),
        migrations.CreateModel(
            name='SurfSpotImage',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('image', models.ImageField(upload_to='surfspots/')),
                ('description', models.TextField(blank=True)),
                ('slug', models.SlugField(blank=True, max_length=150, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('surfspot', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='spot_images', to='surfzones.surfspot')),
            ],
        ),
        migrations.CreateModel(
            name='SurfZone',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('nearest_city', models.CharField(blank=True, max_length=50)),
                ('nearest_airport', models.CharField(blank=True, max_length=50)),
                ('airport_latitude', models.FloatField(blank=True, null=True)),
                ('airport_longitude', models.FloatField(blank=True, null=True)),
                ('solo', models.BooleanField(default=False)),
                ('couple', models.BooleanField(default=False)),
                ('family', models.BooleanField(default=False)),
                ('safety', models.CharField(blank=True, max_length=100)),
                ('health_hazards', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=100), blank=True, null=True, size=None)),
                ('surf_hazards', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=100), blank=True, null=True, size=None)),
                ('best_month', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=100), blank=True, null=True, size=None)),
                ('confort', models.CharField(blank=True, choices=[('Simple', 'Simple'), ('Confortable', 'Confortable'), ('Premium', 'Premium')], max_length=20)),
                ('cost', models.CharField(blank=True, choices=[('Cheap', 'Cheap'), ('Moderate', 'Moderate'), ('Expensive', 'Expensive')], max_length=10)),
                ('language', models.CharField(blank=True, max_length=100)),
                ('currency', models.CharField(blank=True, max_length=100)),
                ('religion', models.CharField(blank=True, max_length=100)),
                ('surroundings', models.CharField(blank=True, max_length=100, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('lefts', models.BooleanField(default=False)),
                ('rights', models.BooleanField(default=False)),
                ('lefts_and_rights', models.BooleanField(default=False)),
                ('slug', models.SlugField(blank=True, max_length=150, unique=True)),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='surfzones.country')),
            ],
        ),
        migrations.AddField(
            model_name='surfspot',
            name='surfzone',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='surf_spots', to='surfzones.surfzone'),
        ),
        migrations.CreateModel(
            name='SurfZoneImage',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('image', models.ImageField(upload_to='surfzones/')),
                ('description', models.TextField(blank=True)),
                ('slug', models.SlugField(blank=True, max_length=150, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('surfzone', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='zone_images', to='surfzones.surfzone')),
            ],
        ),
        migrations.AddConstraint(
            model_name='country',
            constraint=models.UniqueConstraint(fields=('name', 'continent'), name='unique_country_per_continent'),
        ),
        migrations.AddConstraint(
            model_name='surfzone',
            constraint=models.UniqueConstraint(fields=('name', 'country'), name='unique_surf_zone_for_country'),
        ),
    ]
