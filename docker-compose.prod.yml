# ============================
# Networks Definition
# ============================
networks:
  surfquest-network:
    driver: bridge

# ============================
# Volumes Definition
# ============================
volumes:
  pgdata:
    external: true
  media_volume:
    external: true

# ============================
# Services Definition
# ============================
services:
  
  # ============================
  # PostgreSQL Database Service
  # ============================
  db:
    image: postgres:15
    container_name: postgres_db
    env_file:
      - ./.env.prod.backend
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - surfquest-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DATABASE_USER} -d ${DATABASE_NAME}"]
      interval: 5s
      retries: 5
      start_period: 5s
      timeout: 5s

  # ============================
  # Django Backend Service
  # ============================
  backend:
    build:
      context: ./SurfQuest_Backend/src
      dockerfile: Dockerfile.prod.backend
    container_name: django_app
    env_file:
      - ./.env.prod.backend
    environment:
      - DJANGO_ENV=prod   # Explicitly specify production environment
    expose:
      - "8000"
    volumes:
      - ./SurfQuest_Backend/src:/app 
      - ./SurfQuest_Backend/src/media:/app/media
      - ./staticfiles:/app/staticfiles         # Map static files for serving
      - ./logs:/app/logs
    networks:
      - surfquest-network
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8000/health/ || exit 1"]
      interval: 10s
      retries: 5
      start_period: 5s
      timeout: 5s

  # ============================
  # Next.js Frontend Service
  # ============================
  frontend:
    build: 
      context: ./SurfQuest_Frontend/surfquest_nextjs
      dockerfile: Dockerfile.prod.frontend
    container_name: nextjs_app
    env_file:
      - ./SurfQuest_Frontend/surfquest_nextjs/.env.prod.frontend
    expose:
      - "3000"
    networks:
      - surfquest-network
    depends_on:
      - backend
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3000 || exit 1"]
      interval: 10s
      retries: 5
      start_period: 5s
      timeout: 5s

  # ============================
  # Nginx Reverse Proxy Service
  # ============================
  nginx:
    image: nginx:latest
    container_name: nginx_server
    ports:
      - "80:80"
    networks:
      - surfquest-network
    depends_on:
      - backend
      - frontend
    volumes:
      - ./nginx.prod.conf:/etc/nginx/conf.d/default.conf
      - ./staticfiles:/app/staticfiles     # Serve static files
      - ./SurfQuest_Backend/src/media:/app/media  # Serve media files directly